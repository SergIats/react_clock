{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","Clock","state","clockName","today","timerId","this","window","setInterval","setState","console","info","toUTCString","prevState","debug","clearInterval","currentTime","className","Component","App","hasClock","document","addEventListener","event","preventDefault","removeEventListener","ReactDOM","render","getElementById"],"mappings":"4MAEA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEC,MAAQ,CACNC,UAAW,UACXC,MAAO,IAAIP,MAHf,EAMEQ,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,MAAO,IAAIP,OAE3Ba,QAAQC,KAAK,EAAKT,MAAME,MAAMQ,cAAcZ,OAAO,IAAK,MACvD,KAEHO,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEN,UAAWR,QAC1B,QAjBP,gCAoBE,WAAuBkB,GAAmB,eACxC,IAAQV,EAAcG,KAAKJ,MAAnBC,UAEJA,IAAcU,EAAUV,WAE1BO,QAAQI,MAAR,uBAA8BD,EAAUV,UAAxC,eAAwDA,MAzB9D,kCA6BE,WACEI,OAAOQ,cAAcT,KAAKD,WA9B9B,oBAiCE,WACE,MAA6BC,KAAKJ,MAA1BC,EAAR,EAAQA,UACFa,EADN,EAAmBZ,MACOQ,cAAcZ,OAAO,IAAK,GAEpD,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGd,IAGF,YAED,sBAAMc,UAAU,cAAhB,SACGD,WA9CX,GAA2BE,aCLdC,G,MAAb,4MACEjB,MAAQ,CACNkB,UAAU,GAFd,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKf,SAAS,CAAEW,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKb,SAAS,CAAEW,UAAU,SAZhC,kCAgBE,WACEC,SAASI,oBAAoB,eAAe,eAC5CJ,SAASI,oBAAoB,SAAS,iBAlB1C,oBAqBE,WACE,IAAQL,EAAad,KAAKJ,MAAlBkB,SAER,OACE,sBAAKH,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,WA3BrB,GAAyBF,cCLzBQ,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.68ccf0d7.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  today: Date,\n};\n\nexport class Clock extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n  // eslint-disable-next-line\n  componentDidUpdate({}, prevState: State) {\n    const { clockName } = this.state;\n\n    if (clockName !== prevState.clockName) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName, today } = this.state;\n    const currentTime = today.toUTCString().slice(-12, -4);\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\ntype State = {\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', () => {});\n    document.removeEventListener('click', () => {});\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}